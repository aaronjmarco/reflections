What happens when you initialize a repository? Why do you need to do it?

it adds a .git hidden folder to the directory. this file tracks changes in each commit.


How is the staging area different from the working directory and the repository? What value do you think it offers?

the working directory is any files that you are working on in the directory. the staging area is the in between place 
where you begin to add files to the repository for a commit. the repository tracks changes to files at each commit that are in it.
the staging area tells you where everything is. you may not want to track a file in the repository that is in the directory.
it let's you know if the files are going to be tracked.


How can you use the staging area to make sure you have one commit per logical change?

i can see which files i'm going to commit using "git status" command. i can use "git diff" to see what changes i've made to the code.


What are some situations when branches would be helpful in keeping your history organized? How would branches help?

experimental features, other language versions, a team working on features separately. branches would help by keeping the 
master clean and working correctly as you created other new things that may break things. also, individuals or teams could be more 
aggressive in trying new things without affecting the other teams or breaking the master version that is working


How do the diagrams help you visualize the branch structure?

it's easy to see where things split, but really it was helpful when it explaned how to create a branch from a 
checkouted commit not on the branch tip


What is the result of merging two branches together? Why do we represent it in the diagram the way we do?

it updates the files to include all the changes since they were split into two. it is represented in the diagram 
that way because it makes sense visually.